{"version":3,"sources":["components/Note.js","services/notes.js","services/login.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","removeNote","label","important","react_default","a","createElement","className","content","onClick","token","services_notes","axios","get","then","res","data","newObject","config","headers","Authorization","post","id","put","concat","delete","newToken","services_login","login","Object","asyncToGenerator","regenerator_default","mark","_callee","credentials","response","wrap","_context","prev","next","sent","abrupt","stop","_x","apply","this","arguments","Notification","message","Footer","style","color","fontStyle","fontSize","App","_useState","useState","_useState2","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","_useState9","_useState10","username","setUsername","_useState11","_useState12","password","setPassword","_useState13","_useState14","user","setUser","useEffect","noteService","addNote","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","notesToShow","filter","handleNoteChange","target","value","handleLogin","_user","loginService","window","localStorage","setItem","JSON","stringify","t0","setTimeout","components_Notification","Fragment","onSubmit","htmlFor","type","name","onChange","_ref2","_ref3","map","components_Note","key","find","n","changedNote","objectSpread","catch","error","components_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"oOAgBeA,EAdF,SAAAC,GAA4C,IAAzCC,EAAyCD,EAAzCC,KAAMC,EAAmCF,EAAnCE,iBAAkBC,EAAiBH,EAAjBG,WAC9BC,EAAQH,EAAKI,UACb,qBAAuB,iBAE7B,OACIC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QACTR,EAAKS,QADV,OAGIJ,EAAAC,EAAAC,cAAA,UAAQG,QAAST,GAAmBE,GACpCE,EAAAC,EAAAC,cAAA,UAAQG,QAASR,GAAjB,iCCRRS,EAAQ,KA6BGC,EAvBA,WAEX,OADgBC,IAAMC,IATV,cAUGC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,QAqBpBL,EAlBA,SAAAM,GACX,IAAMC,EAAS,CACXC,QAAS,CAAEC,cAAeV,IAG9B,OADgBE,IAAMS,KAjBV,aAiBwBJ,EAAWC,GAChCJ,KAAK,SAAAC,GAAG,OAAIA,EAAIC,QAapBL,EAVA,SAACW,EAAIL,GAEhB,OADgBL,IAAMW,IAAN,GAAAC,OAtBJ,aAsBI,KAAAA,OAAwBF,GAAML,GAC/BH,KAAK,SAAAC,GAAG,OAAIA,EAAIC,QAQpBL,EALA,SAAAW,GAEX,OADgBV,IAAMa,OAAN,GAAAD,OA3BJ,aA2BI,KAAAA,OAA2BF,IAC5BR,KAAK,SAAAC,GAAG,OAAIA,EAAIC,QAGpBL,EA3BE,SAAAe,GACbhB,EAAK,UAAAc,OAAaE,ICEPC,EAAA,CAAEC,MALN,eAAA9B,EAAA+B,OAAAC,EAAA,EAAAD,CAAAE,EAAA1B,EAAA2B,KAAG,SAAAC,EAAMC,GAAN,IAAAC,EAAA,OAAAJ,EAAA1B,EAAA+B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACa3B,IAAMS,KAHjB,YAG+Ba,GADjC,cACJC,EADIE,EAAAG,KAAAH,EAAAI,OAAA,SAEHN,EAASnB,MAFN,wBAAAqB,EAAAK,SAAAT,MAAH,gBAAAU,GAAA,OAAA7C,EAAA8C,MAAAC,KAAAC,YAAA,ICSIC,EAVM,SAAAjD,GAA4B,IAAzBkD,EAAyBlD,EAAzBkD,QAASzC,EAAgBT,EAAhBS,UAC7B,OAAgB,OAAZyC,EAAyB,KAGzB5C,EAAAC,EAAAC,cAAA,OAAKC,UAAWA,GACXyC,ICUEC,EAfA,WAOX,OACI7C,EAAAC,EAAAC,cAAA,OAAK4C,MAPW,CAChBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKNjD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,qFC8JGgD,EAlKH,WAAM,IAAAC,EACYC,mBAAS,IADrBC,EAAA5B,OAAA6B,EAAA,EAAA7B,CAAA0B,EAAA,GACPI,EADOF,EAAA,GACAG,EADAH,EAAA,GAAAI,EAEgBL,mBAAS,kBAFzBM,EAAAjC,OAAA6B,EAAA,EAAA7B,CAAAgC,EAAA,GAEPE,EAFOD,EAAA,GAEEE,EAFFF,EAAA,GAAAG,EAGgBT,oBAAS,GAHzBU,EAAArC,OAAA6B,EAAA,EAAA7B,CAAAoC,EAAA,GAGPE,EAHOD,EAAA,GAGEE,EAHFF,EAAA,GAAAG,EAI0Bb,mBAAS,MAJnCc,EAAAzC,OAAA6B,EAAA,EAAA7B,CAAAwC,EAAA,GAIPE,EAJOD,EAAA,GAIOE,EAJPF,EAAA,GAAAG,EAKkBjB,mBAAS,IAL3BkB,EAAA7C,OAAA6B,EAAA,EAAA7B,CAAA4C,EAAA,GAKPE,EALOD,EAAA,GAKGE,EALHF,EAAA,GAAAG,EAMkBrB,mBAAS,IAN3BsB,EAAAjD,OAAA6B,EAAA,EAAA7B,CAAAgD,EAAA,GAMPE,EANOD,EAAA,GAMGE,EANHF,EAAA,GAAAG,EAOUzB,mBAAS,MAPnB0B,EAAArD,OAAA6B,EAAA,EAAA7B,CAAAoD,EAAA,GAOPE,EAPOD,EAAA,GAODE,EAPCF,EAAA,GASdG,oBAAU,WACNC,IAEKxE,KAAK,SAAAC,GAAG,OAAI6C,EAAS7C,MAC3B,IAGH,IAAMwE,EAAU,SAACC,GACbA,EAAMC,iBACN,IAAMC,EAAa,CACflF,QAASuD,EACT4B,MAAM,IAAIC,MAAOC,cACjB1F,UAAW2F,KAAKC,SAAW,GAC3BzE,GAAIqC,EAAMqC,OAAS,GAGvBV,EACYI,GACP5E,KAAK,SAAAC,GACF6C,EAASD,EAAMnC,OAAOkE,IACtB1B,EAAW,OAkCjBiC,EAAc9B,EACdR,EACAA,EAAMuC,OAAO,SAAAnG,GAAI,OAAIA,EAAKI,YAE1BgG,EAAmB,SAACX,GAAD,OAAWxB,EAAWwB,EAAMY,OAAOC,QAYtDC,EAAW,eAAAxG,EAAA+B,OAAAC,EAAA,EAAAD,CAAAE,EAAA1B,EAAA2B,KAAG,SAAAC,EAAOuD,GAAP,IAAAe,EAAA,OAAAxE,EAAA1B,EAAA+B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAChBiD,EAAMC,iBADUpD,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAIOiE,EAAa5E,MAAM,CAAE+C,WAAUI,aAJtC,OAINI,EAJM9C,EAAAG,KAMZiE,OAAOC,aAAaC,QAAQ,oBAAqBC,KAAKC,UAAU1B,IAEhEG,EAAqBH,EAAKzE,OAC1B0E,EAAQD,GACRP,EAAY,IACZI,EAAY,IAXA3C,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAyE,GAAAzE,EAAA,SAcZmC,EAAgB,qBAChBuC,WAAW,WAAQvC,EAAgB,OAAS,KAfhC,yBAAAnC,EAAAK,SAAAT,EAAA,kBAAH,gBAAAU,GAAA,OAAA7C,EAAA8C,MAAAC,KAAAC,YAAA,GAyDjB,OACI1C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAC0G,EAAD,CAAchE,QAASuB,IACb,OAATY,EAzCL/E,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4G,SAAA,KACI7G,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,QAAM4G,SAAUZ,GACZlG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAO6G,QAAQ,kBAAf,YADJ,QAEI/G,EAAAC,EAAAC,cAAA,SACIgB,GAAG,iBACH8F,KAAK,OACLf,MAAO1B,EACP0C,KAAK,WACLC,SAAU,SAAAC,GAAA,IAAGnB,EAAHmB,EAAGnB,OAAH,OAAgBxB,EAAYwB,EAAOC,UAEjDjG,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAO6G,QAAQ,kBAAf,YAVJ,QAWI/G,EAAAC,EAAAC,cAAA,SACIgB,GAAG,iBACH8F,KAAK,WACLf,MAAOtB,EACPsC,KAAK,WACLC,SAAU,SAAAE,GAAA,IAAGpB,EAAHoB,EAAGpB,OAAH,OAAgBpB,EAAYoB,EAAOC,WAGrDjG,EAAAC,EAAAC,cAAA,UAAQ8G,KAAK,UAAb,WAsBAhH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAI6E,EAAKkC,KAAT,cAjBZjH,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4G,SAAA,KACI7G,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,QAAM4G,SAAU3B,GACZnF,EAAAC,EAAAC,cAAA,SAAO8G,KAAK,OAAOf,MAAOtC,EAASuD,SAAUnB,IAC7C/F,EAAAC,EAAAC,cAAA,UAAQ8G,KAAK,UAAb,WAiBJhH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQG,QAAS,kBAAM2D,GAAYD,KAC9BA,EAAU,iBAAmB,aAGtC/D,EAAAC,EAAAC,cAAA,UApFG2F,EAAYwB,IAAI,SAAA1H,GAAI,OACvBK,EAAAC,EAAAC,cAACoH,EAAD,CACIC,IAAK5H,EAAKuB,GACVvB,KAAMA,EACNC,iBAAkB,kBAzCL,SAAAsB,GACrB,IAAMvB,EAAO4D,EAAMiE,KAAK,SAAAC,GAAC,OAAIA,EAAEvG,KAAOA,IAChCwG,EAAWjG,OAAAkG,EAAA,EAAAlG,CAAA,GAAQ9B,EAAR,CAAcI,WAAYJ,EAAKI,YAEhDmF,EACYhE,EAAIwG,GACXhH,KAAK,SAAAC,GACF6C,EACID,EAAM8D,IACF,SAAA1H,GAAI,OAAIA,EAAKuB,KAAOA,EACdvB,EACAgB,OAIjBiH,MAAM,SAAAC,GACHzD,EAAe,QAAAhD,OAASzB,EAAKS,QAAd,yCACfuG,WAAW,kBAAMvC,EAAgB,OAAO,KACxCZ,EAASD,EAAMuC,OAAO,SAAA2B,GAAC,OAAIA,EAAEvG,KAAOA,OAuBZtB,CAAiBD,EAAKuB,KAC9CrB,WAAY,kBApBLqB,EAoBsBvB,EAAKuB,QAnB1CgE,EACYhE,GACPR,KAAK,SAAAC,GACF6C,EAASD,EAAMuC,OAAO,SAAAnG,GAAI,OAAIA,EAAKuB,KAAOA,OAJnC,IAAAA,QAsGXlB,EAAAC,EAAAC,cAAC4H,EAAD,cChKZC,IAASC,OAAOhI,EAAAC,EAAAC,cAAC+H,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.0729339f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Note = ({ note, toggleImportance, removeNote }) => {\n    const label = note.important\n        ? 'make not important' : 'make important';\n\n    return (\n        <li className=\"note\">\n            {note.content}\n            &nbsp;\n            <button onClick={toggleImportance}>{label}</button>\n            <button onClick={removeNote}>remove note</button>\n        </li>\n    )\n}\n\nexport default Note;","import axios from 'axios';\nconst baseUrl = '/api/notes';\n\nlet token = null;\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`;\n}\n\nconst getAll = () => {\n    const request = axios.get(baseUrl);\n    return request.then(res => res.data);\n}\n\nconst create = newObject => {\n    const config = {\n        headers: { Authorization: token },\n    };\n    const request = axios.post(baseUrl, newObject, config);\n    return request.then(res => res.data);\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\n    return request.then(res => res.data);\n}\n\nconst remove = id => {\n    const request = axios.delete(`${baseUrl}/${id}`);\n    return request.then(res => res.data);\n}\n\nexport default {\n    getAll,\n    create,\n    update,\n    remove,\n    setToken\n};","import axios from 'axios';\nconst baseUrl = 'api/login';\n\nconst login = async credentials => {\n    const response = await axios.post(baseUrl, credentials);\n    return response.data;\n}\n\nexport default { login };","import React from 'react';\n\nconst Notification = ({ message, className }) => {\n    if (message === null) return null;\n\n    return (\n        <div className={className}>\n            {message}\n        </div>\n    );\n};\n\nexport default Notification;","import React from 'react';\n\nconst Footer = () => {\n    const footerStyle = {\n        color: 'green',\n        fontStyle: 'italic',\n        fontSize: 16\n    }\n\n    return (\n        <div style={footerStyle}>\n            <br />\n            <em>Note app, Department of Computer Science, University of Helsinki 2019</em>\n        </div>\n    )\n};\n\nexport default Footer;","import React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport noteService from './services/notes';\nimport loginService from './services/login';\nimport Notification from './components/Notification';\nimport Footer from './components/Footer';\n\n\nconst App = () => {\n    const [notes, setNotes] = useState([]);\n    const [newNote, setNewNote] = useState('a new note ...');\n    const [showAll, setShowAll] = useState(true);\n    const [errorMessage, setErrorMessage] = useState(null);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [user, setUser] = useState(null);\n\n    useEffect(() => {\n        noteService\n            .getAll()\n            .then(res => setNotes(res));\n    }, []);\n\n\n    const addNote = (event) => {\n        event.preventDefault();\n        const noteObject = {\n            content: newNote,\n            date: new Date().toISOString(),\n            important: Math.random() > 0.5,\n            id: notes.length + 1\n        }\n\n        noteService\n            .create(noteObject)\n            .then(res => {\n                setNotes(notes.concat(noteObject));\n                setNewNote('');\n            });\n    };\n\n    const toggleImportance = id => {\n        const note = notes.find(n => n.id === id);\n        const changedNote = { ...note, important: !note.important };\n\n        noteService\n            .update(id, changedNote)\n            .then(res => {\n                setNotes(\n                    notes.map(\n                        note => note.id !== id\n                            ? note\n                            : res\n                    )\n                );\n            })\n            .catch(error => {\n                setErrorMessage(`Note ${note.content} was already removed from the server`);\n                setTimeout(() => setErrorMessage(null), 5000);\n                setNotes(notes.filter(n => n.id !== id));\n            });\n    };\n\n    const removeNote = id => {\n        noteService\n            .remove(id)\n            .then(res => {\n                setNotes(notes.filter(note => note.id !== id))\n            });\n    };\n\n    const notesToShow = showAll\n        ? notes\n        : notes.filter(note => note.important);\n\n    const handleNoteChange = (event) => setNewNote(event.target.value);\n\n    const rows = () => {\n        return notesToShow.map(note =>\n            <Note\n                key={note.id}\n                note={note}\n                toggleImportance={() => toggleImportance(note.id)}\n                removeNote={() => removeNote(note.id)}\n            />);\n    };\n\n    const handleLogin = async (event) => {\n        event.preventDefault();\n\n        try {\n            const user = await loginService.login({ username, password });\n\n            window.localStorage.setItem('loggedNoteAppUser', JSON.stringify(user));\n\n            noteService.setToken(user.token)\n            setUser(user);\n            setUsername('');\n            setPassword('');\n        }\n        catch (err) {\n            setErrorMessage('Wrong Credentials');\n            setTimeout(() => { setErrorMessage(null) }, 5000);\n        }\n    };\n\n    const loginForm = () => (\n        <>\n            <h2>Login</h2>\n            <form onSubmit={handleLogin}>\n                <div>\n                    <label htmlFor=\"username-input\">username</label> &nbsp;\n                    <input\n                        id=\"username-input\"\n                        type=\"text\"\n                        value={username}\n                        name=\"Username\"\n                        onChange={({ target }) => setUsername(target.value)}\n                    />\n                    <br />\n                    <label htmlFor=\"password-input\">password</label> &nbsp;\n                    <input\n                        id=\"password-input\"\n                        type=\"password\"\n                        value={password}\n                        name=\"Password\"\n                        onChange={({ target }) => setPassword(target.value)}\n                    />\n                </div>\n                <button type=\"submit\">Login</button>\n            </form>\n        </>\n    );\n\n    const noteForm = () => (\n        <>\n            <h2>Create New Note</h2>\n            <form onSubmit={addNote}>\n                <input type=\"text\" value={newNote} onChange={handleNoteChange} />\n                <button type=\"submit\">save</button>\n            </form>\n        </>\n    );\n\n    return (\n        <div>\n            <h1>Notes</h1>\n            <Notification message={errorMessage} />\n            {user === null\n                ? loginForm()\n                :\n                <div>\n                    <p>{user.name} logged in</p>\n                    {noteForm()}\n                </div>\n            }\n            <br />\n            <div>\n                <button onClick={() => setShowAll(!showAll)}>\n                    {showAll ? 'show important' : 'show all'}\n                </button>\n            </div>\n            <ul>\n                {rows()}\n            </ul>\n            <Footer />\n        </div>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}