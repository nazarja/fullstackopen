{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","removeNote","label","important","react_default","a","createElement","className","content","onClick","services_notes","axios","get","then","res","data","newObject","post","id","put","concat","delete","Notification","message","Footer","style","color","fontStyle","fontSize","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","noteService","notesToShow","filter","components_Notification","map","components_Note","key","find","n","changedNote","objectSpread","catch","error","setTimeout","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","type","value","onChange","target","components_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d3ade4ed.chunk.js","sourcesContent":["import React from 'react';\n\nconst Note = ({ note, toggleImportance, removeNote }) => {\n    const label = note.important\n        ? 'make not important' : 'make important';\n\n    return (\n        <li className=\"note\">\n            {note.content}\n            &nbsp;\n            <button onClick={toggleImportance}>{label}</button>\n            <button onClick={removeNote}>remove note</button>\n        </li>\n    )\n}\n\nexport default Note;","import axios from 'axios';\nconst baseUrl = '/api/notes';\n\nconst getAll = () => {\n    const request = axios.get(baseUrl);\n    return request.then(res => res.data);\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject);\n    return request.then(res => res.data);\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\n    return request.then(res => res.data);\n}\n\nconst remove = id => {\n    const request = axios.delete(`${baseUrl}/${id}`);\n    return request.then(res => res.data);\n}\n\nexport default {\n    getAll,\n    create,\n    update,\n    remove\n};","import React from 'react';\n\nconst Notification = ({ message, className }) => {\n    if (message === null) return null;\n\n    return (\n        <div className={className}>\n            {message}\n        </div>\n    );\n};\n\nexport default Notification;","import React from 'react';\n\nconst Footer = () => {\n    const footerStyle = {\n        color: 'green',\n        fontStyle: 'italic',\n        fontSize: 16\n    }\n\n    return (\n        <div style={footerStyle}>\n            <br />\n            <em>Note app, Department of Computer Science, University of Helsinki 2019</em>\n        </div>\n    )\n};\n\nexport default Footer;","import React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport noteService from './services/notes';\nimport Notification from './components/Notification';\nimport Footer from './components/Footer';\n\nconst App = () => {\n    const [notes, setNotes] = useState([]);\n    const [newNote, setNewNote] = useState('a new note ...');\n    const [showAll, setShowAll] = useState(true);\n    const [errorMessage, setErrorMessage] = useState(null);\n\n    useEffect(() => {\n        noteService\n            .getAll()\n            .then(res => setNotes(res));\n    }, []);\n\n\n    const addNote = (event) => {\n        event.preventDefault();\n        const noteObject = {\n            content: newNote,\n            date: new Date().toISOString(),\n            important: Math.random() > 0.5,\n            id: notes.length + 1\n        }\n\n        noteService\n            .create(noteObject)\n            .then(res => {\n                setNotes(notes.concat(noteObject));\n                setNewNote('');\n            });\n    };\n\n    const toggleImportance = id => {\n        const note = notes.find(n => n.id === id);\n        const changedNote = { ...note, important: !note.important };\n\n        noteService\n            .update(id, changedNote)\n            .then(res => {\n                setNotes(\n                    notes.map(\n                        note => note.id !== id\n                            ? note\n                            : res\n                    )\n                );\n            })\n            .catch(error => {\n                setErrorMessage(`Note ${note.content} was already removed from the server`);\n                setTimeout(() => setErrorMessage(null), 5000);\n                setNotes(notes.filter(n => n.id !== id));\n            });\n    };\n\n    const removeNote = id => {\n        noteService\n            .remove(id)\n            .then(res => {\n                setNotes(notes.filter(note => note.id !== id))\n            });\n    };\n\n    const notesToShow = showAll\n        ? notes\n        : notes.filter(note => note.important);\n\n    const handleNoteChange = (event) => setNewNote(event.target.value);\n\n    const rows = () => {\n        return notesToShow.map(note =>\n            <Note\n                key={note.id}\n                note={note}\n                toggleImportance={() => toggleImportance(note.id)}\n                removeNote={() => removeNote(note.id)}\n            />);\n    };\n\n    return (\n        <div>\n            <h1>Notes</h1>\n\n            <Notification message={errorMessage} />\n\n            <div>\n                <button onClick={() => setShowAll(!showAll)}>\n                    {showAll ? 'show important' : 'show all'}\n                </button>\n            </div>\n            <ul>\n                {rows()}\n            </ul>\n            <form onSubmit={addNote}>\n                <input type=\"text\" value={newNote} onChange={handleNoteChange} />\n                <button type=\"submit\">save</button>\n            </form>\n\n            <Footer />\n        </div>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}